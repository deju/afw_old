#coding=utf-8


from user import User
from article.about import About
from article.blog import Blog
from article.reference import Reference
from article.picture import Picture
from article.equation import Equation
from article.langcode import Langcode
from article.tableform import Tableform

import traceback

def get_max_alias(alist):
    alias = 1
    while 1:
        if str(alias) in alist:
            alias = alias + 1
        else:
            break
    return str(alias)


def fun_article_new_src(user, article_id, article_type, src_type, title, body, source, code_type, math_type, father):
    
    if article_type == "about":
        AF_Object = About(_id=user.about._id)
        article_id = str(user.about._id)
        isnew = False
    elif article_type == "blog":
        try:
            AF_Object = Blog(_id=article_id)
            isnew = False
        except Exception, e:
            print e
            AF_Object = Blog()
            AF_Object.set_propertys(**{'author_id':user._id, 'author_name':user.name})
            article_id = str(AF_Object._id)
            isnew = True       
            (user.drafts_lib).add_obj(AF_Object)     
    elif article_type == "comment":
        pass
    else:
        return [1,'文章类型错误！']
    #print 'drafts:', user.drafts_lib.load_all()

    rstring = {'isnew':isnew, 'article':article_id, 'alias':''}

    if src_type == 'r':
        ref_lib =  AF_Object.reference_lib
        #print type(ref_lib), ref_lib
        #print ref_lib.load_all().keys()
        alias = get_max_alias(ref_lib.load_all().keys())
        #print alias
        new_ref = Reference()
        #print new_ref._id
        new_ref.set_propertys(**{'alias':alias, 'url':source, 'name':title, 'body':body})
        ref_lib.add_obj(new_ref)
        rstring['alias'] = alias
        return [0, rstring]
    elif src_type == 'c':
        code_lib = AF_Object.langcode_lib
        alias = get_max_alias(code_lib.load_all().keys())
        new_code = Langcode()
        new_code.set_propertys(**{'alias':alias, 'name':title, 'code':body, 'lang':code_type})
        code_lib.add_obj(new_code)
        rstring['alias'] = alias
        return [0, rstring]
    elif src_type == 'm':
        #print 'new math'
        math_lib = AF_Object.equation_lib
        #print math_lib.load_all()
        alias = get_max_alias(math_lib.load_all().keys())
        new_math = Equation()
        #print new_math._id
        new_math.set_propertys(**{'alias':alias, 'name':title, 'equation':body, 'mode':math_type})
        #print math_type
        math_lib.add_obj(new_math)
        rstring['alias'] = alias
        return [0, rstring]
    elif src_type == 't':
        table_lib = AF_Object.tableform_lib
        alias = get_max_alias(table_lib.load_all().keys())
        new_table = Tableform()
        new_table.set_propertys(**{'alias':alias, 'name':title, 'tableform':body})
        table_lib.add_obj(new_table)
        rstring['alias'] = alias
        return [0, rstring]
    else:
        return [1,'本站尚不支持此类型资源，我们将继续改进！']



def fun_new_pic(user, article_id, article_type, title, url, thumb, father):
    if article_type == "about":
        AF_Object = About(_id=user.about._id)
        isnew = False
    elif article_type == "blog":
        try:
            AF_Object = Blog(_id=article_id)
            print AF_Object.author_id, user._id
            if str(AF_Object.author_id) != str(user._id):
                return [1, '无权限操作他人的文章！'] 
            isnew = False
        except Exception, e:
            print e
            AF_Object = Blog()
            AF_Object.set_propertys(**{'author_id':user._id, 'author_name':user.name})
            article_id = str(AF_Object._id)
            isnew = True  
            (user.drafts_lib).add_obj(AF_Object)    
    elif article_type == "comment":
        pass          
    else:
        return [1,'文章类型错误！']

    img_lib = AF_Object.picture_lib
    alias = get_max_alias(img_lib.load_all().keys())
    new_img = Picture()
    new_img.set_propertys(**{'alias':alias, 'name':title, 'file_name':url, 'thumb_name':thumb})
    img_lib.add_obj(new_img)
    rstring = {'isnew':isnew, 'article':article_id, 'alias':alias} 
    return [0, rstring]
    

def fun_article_update_src(user, article_id, article_type, src_type, alias, title, body, source, code_type, math_type):
    '''
        update the lib of the article, article_type is about|blog|comment
        article_id must be have
        need alias too, then we find the lib _id, create the object, and set of it
    '''
    if article_type == "about":
        AF_Object = About(_id=user.about._id)
    elif article_type == "blog":
        try:
            AF_Object = Blog(_id=article_id)
            if str(AF_Object.author_id) != str(user._id):
                return [1, '无权限操作他人的文章！']
        except Exception, e:
            return [1, '文章不存在']      
    else:
        return [1,'文章类型错误！']

    if src_type == 'r':
        # update reference source
        ref_lib = AF_Object.reference_lib
        old_ref =  ref_lib.get_obj(alias)
        if old_ref is None:
            return [1, '该资源不存在！']
        old_ref.set_propertys(**{'url':source, 'name':title, 'body':body})
        ref_lib.add_obj(old_ref)
        return [0, '']
    elif src_type == 'c':
        # update code source 
        code_lib = AF_Object.langcode_lib
        old_code = code_lib.get_obj(alias)
        if old_code is None:
            return [1, '该资源不存在！']
        old_code.set_propertys(**{'name':title, 'code':body, 'lang':code_type})
        code_lib.add_obj(old_code)
        return [0, '']
    elif src_type == 'm':
        # update math source 
        math_lib = AF_Obeject.equation_lib
        old_math = math_lib.get_obj(alias)
        if old_math is None:
            return [1, '该资源不存在！']
        old_math.set_propertys(**{'name':title, 'equation':body, 'mode':math_type})
        math_lib.add_obj(old_math)
        return [0, '']
    elif src_type == 't':
        # update table source 
        table_lib = AF_Object.tableform_lib
        old_table = table_lib.get_obj(alias)
        if old_table is None:
            return [1, '该资源不存在！']
        old_table.set_propertys(**{'name':title, 'tableform':body})
        table_lib.add_obj(old_table)
        return [0, '']
    elif src_type == "i":
        # update image source 
        img_lib = AF_Object.picture_lib
        old_img = img_lib.get_obj(alias)
        if old_img is None:
            return [1, '该资源不存在！']
        old_img.name = title
        img_lib.add_obj(old_img)
        return [0, '']
    else:
        return [1,'本站尚不支持此类型资源，我们将继续改进！']


def fun_article_delete_src(user, article_id, article_type, src_type, alias):
    
    if article_type == "about":
        AF_Object = About(_id=user.about._id)
    elif article_type == "blog":
        try:
            AF_Object = Blog(_id=article_id)
            if str(AF_Object.author_id) != str(user._id):
                return [1, '无权限操作他人的文章！']
        except Exception, e:
            return [1,'该文章不存在！请您检查参数！']           
    else:
        return [1,'文章类型错误！请您检查参数']

    if src_type == 'r':
        AF_Object.reference_lib.remove_obj(alias)
        return [0, '']
    elif src_type == 'c':
        AF_Object.langcode_lib.remove_obj(alias)
        return [0, '']
    elif src_type == 'm':
        AF_Object.equation_lib.remove_obj(alias)
        return [0, '']
    elif src_type == 't':
        AF_Object.tableform_lib.remove_obj(alias)
        return [0, '']
    elif src_type == 'i':
        AF_Object.picture_lib.remove_obj(alias)
        return [0, '']
    else:
        return [1,'本站尚不支持此类型资源，我们将继续改进！']
